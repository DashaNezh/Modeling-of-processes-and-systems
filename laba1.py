class CoffeeMachine:
    def __init__(self):
        # Состояния машины
        self.states = ['Покой', 'Ожидание ввода', 'Ожидание объема', 'Ожидание выбора напитка',
                       'Приготовление кофе"']
        self.current_state = 'Покой'

        # Матрица переходов состояний
        self.transition_matrix = {
            'Покой': {
                'включить капучино': 'Ожидание объема',
                'включить латте': 'Ожидание объема',
                'выбрать 200 мл': 'Ожидание выбора напитка',
                'выбрать 320 мл': 'Ожидание выбора напитка',
            },
            'Ожидание объема': {
                'выбрать 200 мл': 'Приготовление кофе"',
                'выбрать 320 мл': 'Приготовление кофе"'
            },
            'Ожидание выбора напитка': {
                'включить капучино': 'Приготовление кофе"',
                'включить латте': 'Приготовление кофе"',
            },
            'Приготовление кофе"': {
                'начать': 'Покой' # Можем добавить сюда ещё один вход сигнал - например 'Отмена'
            }
        }

    def process_signal(self, signal):
        # Переход к новому состоянию в зависимости от входного сигнала
        if signal in self.transition_matrix[self.current_state]:
            self.df = self.transition_matrix[self.current_state][signal]
            print(f"Состояние изменилось на: {self.current_state}")
        else:
            print(f"Сигнал '{signal}' не поддерживается в состоянии '{self.current_state}'.")

    def get_state(self):
        # Получить текущее состояние машины
        return self.current_state


# Основной цикл для взаимодействия с пользователем
if __name__ == "__main__":
    coffee_machine = CoffeeMachine()

    print("Добро пожаловать в систему кофемашины. Введите команду для управления машиной.")
    print(
        "Доступные сигналы: 'включить капучино', 'включить латте', 'выбрать 200 мл', 'выбрать 320 мл', 'начать', 'выход'.\n")

    while True:
        print(f"\nТекущее состояние: {coffee_machine.get_state()}")
        signal = input("Введите сигнал: ").strip().lower()

        if signal == 'выход':
            print("Выход из системы кофемашины.")
            break

        coffee_machine.process_signal(signal)
